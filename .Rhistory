y2,
pch = 15,
col = "magenta"
)
text(
x2,
y2,
rownames(coord_terms[important_terms,]),
col = "magenta"
)
legend(
"topleft",
legend,
cex = 0.6,
text.col = "purple"
)
dev.off()
plot_file <- "./lsa.png"
png(plot_file)
plot(
x1,
y1,
#  xlim = c(-50,0),
#  ylim = c(-10,20),
main = "Analiza ukrytych wymiarów semantycznych",
xlab = "SD1",
ylab = "SD2",
col = "purple",
pch = 16
)
text(
x1,
y1,
paste(
"d",
1:length(rownames(dtm_tfidf_bounds)),
sep = ""
),
col = "purple",
pos = 1
)
points(
x2,
y2,
pch = 15,
col = "magenta"
)
text(
x2,
y2,
rownames(coord_terms[important_terms,]),
col = "magenta"
)
legend(
"topleft",
legend,
cex = 0.6,
text.col = "purple"
)
dev.off()
own_terms <- c("harry", "hermiona", "łucja", "edmund","bella","edward")
x2 <- coord_terms[own_terms,1]
own_terms <- c("harry", "hermiona", "edmund","bella", "edward")
own_terms <- c("harry", "hermiona", "Łucja", "edmund","bella", "edward")
#x2 <- coord_terms[important_terms,1]
#y2 <- coord_terms[important_terms,2]
x2 <- coord_terms[own_terms,1]
own_terms <- c("harry")
#x2 <- coord_terms[important_terms,1]
#y2 <- coord_terms[important_terms,2]
x2 <- coord_terms[own_terms,1]
own_terms <- c("harry", "hermiona")
#x2 <- coord_terms[important_terms,1]
#y2 <- coord_terms[important_terms,2]
x2 <- coord_terms[own_terms,1]
own_terms <- c("harry", "hermiona", "Łucja")
#x2 <- coord_terms[important_terms,1]
#y2 <- coord_terms[important_terms,2]
x2 <- coord_terms[own_terms,1]
own_terms <- c("harry", "hermiona", "zuzanna", "edmund","bella", "edward")
#x2 <- coord_terms[important_terms,1]
#y2 <- coord_terms[important_terms,2]
x2 <- coord_terms[own_terms,1]
own_terms <- c("harry", "hermiona", "piotr", "edmund","bella", "edward")
#x2 <- coord_terms[important_terms,1]
#y2 <- coord_terms[important_terms,2]
x2 <- coord_terms[own_terms,1]
own_terms <- c("harry", "hermiona", "bella", "edward")
#x2 <- coord_terms[important_terms,1]
#y2 <- coord_terms[important_terms,2]
x2 <- coord_terms[own_terms,1]
important_terms
own_terms <- c("harry", "hermiona", "łucja", "edmund","bella", "edward")
own_terms
own_terms %in% important_terms
own_terms <- c("bella", "edward")
#x2 <- coord_terms[important_terms,1]
#y2 <- coord_terms[important_terms,2]
x2 <- coord_terms[own_terms,1]
own_terms <- c("harry", "hermiona", "łucja", "edmund")
#x2 <- coord_terms[important_terms,1]
#y2 <- coord_terms[important_terms,2]
x2 <- coord_terms[own_terms,1]
own_terms <- c("harry", "hermiona", "łucja", "edmund")
#x2 <- coord_terms[important_terms,1]
#y2 <- coord_terms[important_terms,2]
x2 <- coord_terms[own_terms,1]
y2 <- coord_terms[own_terms,2]
plot_file <- "./lsa.png"
png(plot_file)
plot(
x1,
y1,
#  xlim = c(-50,0),
#  ylim = c(-10,20),
main = "Analiza ukrytych wymiarów semantycznych",
xlab = "SD1",
ylab = "SD2",
col = "purple",
pch = 16
)
text(
x1,
y1,
paste(
"d",
1:length(rownames(dtm_tfidf_bounds)),
sep = ""
),
col = "purple",
pos = 1
)
points(
x2,
y2,
pch = 15,
col = "magenta"
)
text(
x2,
y2,
rownames(coord_terms[important_terms,]),
col = "magenta"
)
legend(
"topleft",
legend,
cex = 0.6,
text.col = "purple"
)
dev.off()
own_terms <- c("harry", "hermiona", "łucja", "edmund")
current_terms <- own_terms
x1 <- coord_docs[,1]
y1 <- coord_docs[,2]
x2 <- coord_terms[current_terms,1]
y2 <- coord_terms[current_terms,2]
plot_file <- "./lsa.png"
png(plot_file)
plot(
x1,
y1,
#  xlim = c(-50,0),
#  ylim = c(-10,20),
main = "Analiza ukrytych wymiarów semantycznych",
xlab = "SD1",
ylab = "SD2",
col = "purple",
pch = 16
)
text(
x1,
y1,
paste(
"d",
1:length(rownames(dtm_tfidf_bounds)),
sep = ""
),
col = "purple",
pos = 1
)
points(
x2,
y2,
pch = 15,
col = "magenta"
)
text(
x2,
y2,
rownames(coord_terms[current_terms,]),
col = "magenta"
)
legend(
"topleft",
legend,
cex = 0.6,
text.col = "purple"
)
dev.off()
install.packages("topicmodels")
# wczytanie bibliotek
library(topicmodels)
# wczytanie i wykonanie skryptu frequency_matrix.R
source_file = "./frequency_matrix.R"
source(source_file)
# przygotowanie katalogu na wyniki
topics_dir <- "./topics"
dir.create(topics_dir)
# analiza ukrytej alokacji Dirichlet'a
words_count <- ncol(dtm_tf_all)
topics_count <- 10
lda_model <- LDA(
dtm_tf_all,
topics_count,
method = "Gibbs",
control = lista(
burnin = 2000,
thin = 100,
iter = 3000
)
)
lda_model <- LDA(
dtm_tf_all,
topics_count,
method = "Gibbs",
control = list(
burnin = 2000,
thin = 100,
iter = 3000
)
)
results <- posterior(lda_model)
View(results)
barplot(
topic,
horiz = T,
las = 1,
main = paste("Temat", topic_no),
xlab = "Prawdopodobieństwo",
col = cols[topic_no]
)
cols <- c("purple", "turquoise", "orange", "lightskyblue", "darkseagreen", "hotpink", "dodgerblue", "darkmagenta", "khaki", "darkolivegreen")
# prezentacja tematów
for (topic_no in 1:topics_count) {
topic_file <- paste(
topics_dir,
paste("Temat", topic_no, ".png"),
sep = "/"
)
topic <- tail(sort(results$terms[topic_no,]),20)
png(topic_file)
par(mai = c(1,2,1,1))
barplot(
topic,
horiz = T,
las = 1,
main = paste("Temat", topic_no),
xlab = "Prawdopodobieństwo",
col = cols[topic_no]
)
}
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
# prezentacja dokumentów
plot_file <- paste(
topics_dir,
"Dokumenty.png",
sep = "/"
)
# prezentacja dokumentów
plot_file <- paste(
topics_dir,
"Dokumenty.png",
sep = "/"
)
png(plot_file)
par(mai = c(1,4,1,1))
barplot(
t(results$topics),
horiz = T,
main = "Dokumenty",
xlab = "Prawdopodobieństwo",
col = cols
)
dev.off()
png(plot_file)
par(mai = c(1,4,1,1))
barplot(
t(results$topics),
horiz = T,
las = 1,
main = "Dokumenty",
xlab = "Prawdopodobieństwo",
col = cols
)
dev.off()
png(plot_file, width = 480)
par(mai = c(1,4,1,1))
barplot(
t(results$topics),
horiz = T,
las = 1,
main = "Dokumenty",
xlab = "Prawdopodobieństwo",
col = cols
)
dev.off()
png(plot_file, width = 880)
par(mai = c(1,4,1,1))
barplot(
t(results$topics),
horiz = T,
las = 1,
main = "Dokumenty",
xlab = "Prawdopodobieństwo",
col = cols
)
dev.off()
topics_count <- 6
lda_model <- LDA(
dtm_tf_all,
topics_count,
method = "Gibbs",
control = list(
burnin = 2000,
thin = 100,
iter = 3000
)
)
results <- posterior(lda_model)
cols <- c("purple", "turquoise", "orange", "lightskyblue", "darkseagreen", "hotpink", "dodgerblue", "darkmagenta", "khaki", "darkolivegreen")
# prezentacja tematów
for (topic_no in 1:topics_count) {
topic_file <- paste(
topics_dir,
paste("Temat", topic_no, ".png"),
sep = "/"
)
topic <- tail(sort(results$terms[topic_no,]),20)
png(topic_file)
par(mai = c(1,2,1,1))
barplot(
topic,
horiz = T,
las = 1,
main = paste("Temat", topic_no),
xlab = "Prawdopodobieństwo",
col = cols[topic_no]
)
dev.off()
}
# prezentacja dokumentów
plot_file <- paste(
topics_dir,
"Dokumenty.png",
sep = "/"
)
png(plot_file, width = 880)
par(mai = c(1,4,1,1))
barplot(
t(results$topics),
horiz = T,
las = 1,
main = "Dokumenty",
xlab = "Prawdopodobieństwo",
col = cols
)
dev.off()
# analiza ukrytej alokacji Dirichlet'a
words_count <- ncol(dtm_tf_all)
topics_count <- 3
lda_model <- LDA(
dtm_tf_all,
topics_count,
method = "Gibbs",
control = list(
burnin = 2000,
thin = 100,
iter = 3000
)
)
results <- posterior(lda_model)
cols <- c("purple", "turquoise", "orange", "lightskyblue", "darkseagreen", "hotpink", "dodgerblue", "darkmagenta", "khaki", "darkolivegreen")
# prezentacja tematów
for (topic_no in 1:topics_count) {
topic_file <- paste(
topics_dir,
paste("Temat", topic_no, ".png"),
sep = "/"
)
topic <- tail(sort(results$terms[topic_no,]),20)
png(topic_file)
par(mai = c(1,2,1,1))
barplot(
topic,
horiz = T,
las = 1,
main = paste("Temat", topic_no),
xlab = "Prawdopodobieństwo",
col = cols[topic_no]
)
dev.off()
}
# prezentacja dokumentów
plot_file <- paste(
topics_dir,
"Dokumenty.png",
sep = "/"
)
png(plot_file, width = 880)
par(mai = c(1,4,1,1))
barplot(
t(results$topics),
horiz = T,
las = 1,
main = "Dokumenty",
xlab = "Prawdopodobieństwo",
col = cols
)
dev.off()
# analiza ukrytej alokacji Dirichlet'a
words_count <- ncol(dtm_tf_all)
topics_count <- 4
lda_model <- LDA(
dtm_tf_all,
topics_count,
method = "Gibbs",
control = list(
burnin = 2000,
thin = 100,
iter = 3000
)
)
results <- posterior(lda_model)
cols <- c("purple", "turquoise", "orange", "lightskyblue", "darkseagreen", "hotpink", "dodgerblue", "darkmagenta", "khaki", "darkolivegreen")
# prezentacja tematów
for (topic_no in 1:topics_count) {
topic_file <- paste(
topics_dir,
paste("Temat", topic_no, ".png"),
sep = "/"
)
topic <- tail(sort(results$terms[topic_no,]),20)
png(topic_file)
par(mai = c(1,2,1,1))
barplot(
topic,
horiz = T,
las = 1,
main = paste("Temat", topic_no),
xlab = "Prawdopodobieństwo",
col = cols[topic_no]
)
dev.off()
}
# prezentacja dokumentów
plot_file <- paste(
topics_dir,
"Dokumenty.png",
sep = "/"
)
png(plot_file, width = 880)
par(mai = c(1,4,1,1))
barplot(
t(results$topics),
horiz = T,
las = 1,
main = "Dokumenty",
xlab = "Prawdopodobieństwo",
col = cols
)
dev.off()
install.packages("wordcloud")
# wczytanie bibliotek
library(wordcloud)
# przygotowanie katalogu na wyniki
clouds_dir <- "./clouds"
dir.create(clouds_dir)
# waga tf jako miara ważności słów
for (doc_no in 1:length(corpus)) {
print(rownames(as.matrix(dtm_tf_all))[doc_no])
print(head(sort(as.matrix(dtm_tf_all)[doc_no,]),decreasing = T))
}
# waga tf jako miara ważności słów
for (doc_no in 1:length(corpus)) {
print(rownames(as.matrix(dtm_tf_all))[doc_no])
print(head(sort(as.matrix(dtm_tf_all)[doc_no,],decreasing = T)))
}
# waga tfif jako miara ważności słów
for (doc_no in 1:length(corpus)) {
print(rownames(as.matrix(dtm_tfidf_all))[doc_no])
print(head(sort(as.matrix(dtm_tfidf_all)[doc_no,],decreasing = T)))
}
# waga tfif jako miara ważności słów
for (doc_no in 1:length(corpus)) {
print(rownames(t(as.matrix(tdm_tfidf_all)))[doc_no])
print(head(sort(t(as.matrix(tdm_tfidf_all))[doc_no,],decreasing = T)))
}
# waga tfif jako miara ważności słów
for (doc_no in 1:length(corpus)) {
print(rownames(t(as.matrix(tdm_tfidf_all)))[doc_no])
print(head(sort(t(as.matrix(tdm_tfidf_all))[doc_no,],decreasing = T)))
}
